#
#  xsd <%=@code.name%>
#
<%
  #We want to make sure we output all referenced types. And we want to link to them

  #list of all the complex types that need to be defined.
  #true means it is defined, false means it needs to be defined
  defined={}
  ignore=(params[:ignore]||"").split(',').each do |f| #for each ignored parameter
	defined[f]=true #mark it that we have already defined it
  end
-%>

digraph <%= @code.name %> {
	label="<%= @code.name %>"
	node [ shape=Mrecord, color="#3d6b8e", fontcolor="#334466", width="1.2", fillcolor="#eeeeee", style=filled ]
	edge [ color="#3d6b8e", labelcolor="#334466", minlen="1.2"]
<% @code.local_types.each do |t| #all local types -%>
<%#   unless t.derived #don't do derived types -%>
<%= dot_struct(t,nil,nil,defined) %>
<%= dot_links(t,nil,defined,ignore) %>
<%#   end #derived types-%>
<% end #all local types-%>
<% @code.local_faults.each do |t| #all local faults -%>
<%#   unless t.derived #don't do derived types -%>
<%= dot_struct(t,nil,nil,defined) %>
<%= dot_links(t,nil,defined,ignore) %>
<%#   end #derived types-%>
<% end #all local faults-%>
	
	// these are referenced from local types to external types
	// show these a little differently
	edge [ style=dashed]
	node [ style=none ]
<%=
  dot_recurse(defined,ignore,@code)
-%>
}
